# Synthetic Patients AI - Docker Compose Configuration
# For complete multimodal AI simulation environment

version: '3.8'

services:
  # Main Application
  synthetic-patients-app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data:ro
    depends_on:
      - redis
    networks:
      - synthetic-patients-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - synthetic-patients-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: AI Processing Service (for future multimodal features)
  ai-processor:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./ai-services:/app
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - synthetic-patients-network
    restart: unless-stopped
    command: python -m flask run --host=0.0.0.0 --port=5000
    ports:
      - "5000:5000"

  # Optional: Database for analytics and session storage
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=synthetic_patients
      - POSTGRES_USER=synthpatients
      - POSTGRES_PASSWORD=secure_password_change_in_production
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - synthetic-patients-network
    restart: unless-stopped
    ports:
      - "5432:5432"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - synthetic-patients-app
    networks:
      - synthetic-patients-network
    restart: unless-stopped

volumes:
  redis-data:
  postgres-data:

networks:
  synthetic-patients-network:
    driver: bridge