name: 🏥 Synthetic Patients CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: npm ci

    - name: 🧪 Run Tests
      run: npm test

    - name: 📊 Generate Coverage
      run: npm run test:coverage
      continue-on-error: true

    - name: 📤 Upload Coverage
      uses: codecov/codecov-action@v3
      continue-on-error: true

  lint:
    name: 🎨 Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: npm ci

    - name: 🎨 ESLint
      run: npm run lint
      continue-on-error: true

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: npm ci

    - name: 🔒 Security Audit
      run: npm audit --audit-level high

  docker:
    name: 🐳 Docker Build
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔨 Build Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: synthetic-patients-ai:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🧪 Test Docker Image
      run: |
        docker run --rm -d --name test-container -p 3000:3000 synthetic-patients-ai:test
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container